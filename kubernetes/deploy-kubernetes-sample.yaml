apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo-backend
  ports:
  - port: 27017
    targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-backend-deployment
spec:
  selector:
    matchLabels:
      app: mongo-backend
  template:
    metadata:
      labels:
        app: mongo-backend
    spec:
      containers:
      - name: mongo
        image: mongo:3 
        resources:
          requests:
            memory: "500Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        ports:
        - containerPort: 27017
        volumeMounts:
          - mountPath: /data/db 
            name: mongo-backend
          - mountPath: /config 
            name: server-config-mongo
      volumes:
        - name: mongo-backend
          persistentVolumeClaim:
            claimName: mongo-backend-vclaim-dev
        - name: server-config-mongo
          configMap:
            name: server-config
---
apiVersion: v1
kind: Service
metadata:
  name: poussetaches
spec:
  selector:
    app: poussetaches-middleware
  ports:
  - port: 7991
    targetPort: 7991
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: poussetaches-middleware-deployment
spec:
  selector:
    matchLabels:
      app: poussetaches-middleware
  template:
    metadata:
      labels:
        app: poussetaches-middleware
    spec:
      containers:
      - name: poussetaches-middleware
        image: poussetaches/poussetaches:latest
        resources:
          requests:
            memory: "500Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        ports:
        - containerPort: 7991
        env:
          - name: POSSETACHES_AUTH_KEY
            valueFrom:
              configMapKeyRef:
                name: possetaches-config
                key: auth-key
        volumeMounts:
          - mountPath: /config
            name: server-config-poussetaches
            subPath: me.yml
      volumes:
        - name: server-config-poussetaches
          configMap:
            name: server-config

---
apiVersion: v1
kind: Service
metadata:
  name: microblogpub-service
spec:
  type: NodePort
  selector:
    app: microblogpub-dev
  ports:
  - port: 5005
    targetPort: 5005
---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: microblogpub-dev
  spec:
    selector:
      matchLabels:
        app: microblogpub-dev
    template:
      metadata:
        labels:
          app: microblogpub-dev
      spec:
        containers:
        - name: microblogpub-dev
          image: us.gcr.io/hematite-300609/microblogpub-dev #FIXME: pull in your own image
          resources:
            requests:
              memory: "64Mi"
              cpu: "500m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
          - containerPort: 5005
          env:
            - name: MICROBLOGPUB_MONGODB_HOST
              valueFrom:
                configMapKeyRef:
                  name: envvars
                  key: mongodb-host
            - name: MICROBLOGPUB_POUSSETACHES_HOST 
              value: "http://poussetaches:7991"
          volumeMounts:
            # - mountPath: /app/config
            # name: microblogpub-config
            - mountPath: /app/config/me.yml
              name: server-config-microblogpub
              subPath: me.yml
        volumes:
          - name: server-config-microblogpub
            configMap:
              name: server-config
              items:
                - key: me.yml
                  path: me.yml
          # - name: microblogpub-config
          # persistentVolumeClaim:
          #    claimName: microblogpub-config-pv
        imagePullSecrets:
        - name: gcr-json-key

  
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-backend-vclaim-dev
spec:
  resources:
    requests:
      storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  volumeName: mongo-backend-volume-dev
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-backend-volume-dev
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  persistentVolumeReclaimPolicy: Recycle
  hostPath:
    path: /data/mongo-dev
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envvars
data:
  flask_debug: '0'
  microblog_debug: 'false'
  microblog_internal_host: "http://localhost:5000"
  mongodb-host: "mongo-service:27017"
  poussetaches-host: "http://poussetaches.service:7991"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: possetaches-config
data:
  auth-key: fafafa
---
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: server-config
  data:
    me.yml: |
      username: 
      name: 
      domain: 
      https: true
      summary: 
      icon_url: 
      pass: 
      sourcecode_url: 'https://github.com/howaboutudance/microblog.pub'
      favicon_url: '/static/favicon.png'
      #profile_metadata:
      #    name1: 'value'
      #    name2: 'value2'
      #hide_following: true
      #manually_approves_followers: false
      #aliases:
      #    - "http://example.com/users/name"
      #    - ...
      theme:
          style: "dark" #or "dark"
          color: "#33ff00"   # (purple, default for dark)
    